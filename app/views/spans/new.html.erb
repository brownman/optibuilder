<script type="text/javascript">

	var store_combo_SiteA = createStore('/sites/store/grid',
											   ['id', 'name'],
											   [{name: 'id',  mapping: 'id'},
											    {name: 'name',  mapping: 'name'}
											   ]);

	var store_combo_SiteB = createStore('/sites/store/grid',
											   ['id', 'name'],
											   [{name: 'id',  mapping: 'id'},
											    {name: 'name',  mapping: 'name'}
											   ]);

	var store_combo_Companies = createStore('/companies/store/grid',
											   ['id', 'name'],
											   [{name: 'id',  mapping: 'id'},
											    {name: 'name',  mapping: 'name'}
											   ]);

	var store_Projects = createStore('/projects/store/grid',
											   ['id', 'name'],
											   [{name: 'id',  mapping: 'id'},
											    {name: 'name',  mapping: 'name'}
											   ]);

	var comboProjects = new Ext.form.ComboBox({
		fieldLabel: 'Project',
		valueField: 'id',
		displayField: 'name',
		name: 'span[project_id]',
		hiddenName: 'span[project_id]',
		editable: true,
		emptyText: 'Select a Project...',
		store: store_Projects,
		mode: 'remote',
		selectOnFocus: true,
		forceSelection: true,
		triggerAction: 'all',
		minChars: 3,
		allowBlank: false,
		width: 220
	});

	var comboCompanies =
		new Ext.form.ComboBox({
			fieldLabel: 'Owner',
			valueField: 'id',
			displayField: 'name',
			name: 'span[name]',
			hiddenName: 'span[company_id]',
			editable: true,
			minChars: 3,
			emptyText: 'Select a Company...',
			store: store_combo_Companies,
			mode: 'remote',
			selectOnFocus: true,
			forceSelection: true,
			triggerAction: 'all',
			allowBlank: false
		});

	var comboSiteA =
		new Ext.form.ComboBox({
			fieldLabel: 'Site A',
			valueField: 'id',
			displayField: 'name',
			name: 'span[name]',
			hiddenName: 'span[site_a_id]',
			editable: true,
			minChars: 3,
			emptyText: 'Select a Site...',
			store: store_combo_SiteA,
			mode: 'remote',
			selectOnFocus: true,
			forceSelection: true,
			triggerAction: 'all',
			allowBlank: false
		});

	var comboSiteB =
		new Ext.form.ComboBox({
			fieldLabel: 'Site B',
			valueField: 'id',
			displayField: 'name',
			name: 'span[name]',
			hiddenName: 'span[site_b_id]',
			editable: true,
			minChars: 3,
			emptyText: 'Select a Site...',
			store: store_combo_SiteB,
			mode: 'remote',
			selectOnFocus: true,
			forceSelection: true,
			triggerAction: 'all',
			allowBlank: false
		});

    var form_newSpans = new Ext.FormPanel
	    ({labelWidth: 105,
	      frame:true,
	      title: 'Create a new span using the form below',
	      bodyStyle:'padding:5px 5px 0',
	      style: "margin: 0px auto 0px auto;",
	      width: 500,
	      defaults: {width: 365},
	      defaultType: 'textfield',
	      monitorValid: true,
	      items: [{xtype:"fieldset",
                   title:"Span",
                   autoHeight: true,
                   width: 476,
                   defaults: {width: 325},
                   items:[comboProjects, comboSiteA, comboSiteB, comboCompanies,
				          {xtype:'textfield', fieldLabel: 'Distance', name: 'span[distance]', allowBlank:false},
				          {xtype:'textfield', fieldLabel: 'Fiber Type', name: 'span[fiber_type_id]', allowBlank:true}
		                 ]
                 }],
      			 buttons: [{text: 'Create Span',
	                 handler:function()
	                   {if (form_newSpans.getForm().isValid())
	                       {form_newSpans.getForm().submit
	                         ({url:'<%= url_for (:controller => 'spans', :action => 'create') %>',
	                           waitMsg:'Saving Data...',
	                           success: function(){
	                              Ext.Msg.alert('Span added','The span has been successfully created');
	                              updateSubTab('tab_spans','sub_tab_spans','Spans','<%= spans_path %>');
	                              closeSubTab('tab_spans','sub_tab_spans_new');},
	                           failure: function(form, action)
	                              {if (action.failureType == 'server')
	                                  {msg = String(Ext.util.JSON.decode(action.response.responseText));
	                                   Ext.Msg.alert('Validation Error', msg);}
	                               else
	                                  {Ext.Msg.alert('Error', 'There has been a problem while creating this request. Contact the system administrator.');}
	                              }
	                         });
	                       }
	                   }
	                },
	                {text: 'Cancel',
	                 handler:function(){closeSubTab('tab_spans','sub_tab_spans_new');}
	               }]
	    });
    form_newSpans.render( 'area_form_newSpans');
</script>
<br/>
<div id="area_form_newSpans" style="float:left;"></div>
