<script type = "text/javascript">

	function btnCableFibers(value, metaData, record, rowIndex){
		var ret =  '<div align="center">'+
					'<a href="#" onclick="addCableFibers(' + rowIndex + ')">'+
						'<img src="../images/icon_new_fiber.gif" title="Fibers" alt="Fibers" ></img>'+
					'</a>'+
				'</div>';
		return ret;
	}

	function btnEdit(value, metaData, record, rowIndex){
		var ret =  '<div align="center">'+
					'<a href="#" onclick="editCable(' + rowIndex + ')">'+
						'<img src="../images/editar.png" title="Edit" alt="Edit" ></img>'+
					'</a>'+
				'</div>';
		return ret;
	}

	function btnDelete(value, metaData, record, rowIndex, colIndex, store){
		var ret =
		    '<div align="center">'+
				'<a href="#" onclick="deleteCable(' + rowIndex + ')">'+
					'<img src="../images/Recycle_empty.png" title="Delete" alt="Delete" ></img>'+
				'</a>'+
			'</div>';
		return ret;
	}

	function linkShow(value, metaData, record, rowIndex, colIndex, store){
		return '<div><a href="#" onclick="showCable(' + rowIndex + ')">' + value + '</a></div>';
	}

	function editCable(r){
		var id = store_Cables.getAt(r).get('id');
		var name = store_Cables.getAt(r).get('cable_name');
		addSubTab('tab_cables', 'sub_tab_cables_edit_'+id, 'Editing Cable ' + name, '/cables/edit/' + id, 'editIcon');
	}

	function deleteCable(r){
		var id = store_Cables.getAt(r).get('id');
		var name = store_Cables.getAt(r).get('cable_name');
		Ext.Msg.confirm('Delete ', 'Confirm delete cable: ' + name, function(btn) {
		    if (btn == 'yes') {
		      updateSubTab('tab_cables', 'sub_tab_cables', 'List', '/Cables/destroy/' + id);
		      closeSubTab('tab_cables', 'sub_tab_cables_edit_' + id);
		      closeSubTab('tab_cables', 'sub_tab_cables_show_' + id);
		    }
		  });
	}

	function showCable(r){
		var id = store_Cables.getAt(r).get('id');
		var name = store_Cables.getAt(r).get('cable_name');
		addSubTab('tab_cables', 'sub_tab_cables_show_'+id, 'Showing', '/Cables/show/' + id, 'showIcon');
	}

	function addCableFibers(r){
		var id = store_Cables.getAt(r).get('span_id');
		var cable_id = store_Cables.getAt(r).get('id');
		var name = store_Cables.getAt(r).get('cable_name');
		addTab('tab_fibers', 'Fibers', 'List', '<%= fibers_path %>', 'tabFibers');
		addSubTab('tab_fibers', 'sub_tab_fibers_new_table'+id, 'Adding fibers to cable '+name, '/fibers/new_table/'+id+'?cable_id='+cable_id, 'showIcon');
	}

	function newCable(){
		      addSubTab('tab_cables', 'sub_tab_cables_new', 'New Cable', '<%= url_for(:action => "new") %>', 'newIcon');
	}

	var store_Cables = createStore(	'<%= url_for(:controller => "cables", :action => "store", :id => "grid") %>',
											['id', 'company_name', 'project_name', 'site_a_name', 'site_b_name', 'span_id'],
											[
											 {name: 'id',  mapping: 'id'},
											 {name: 'company_name',  mapping: 'company_name'},
											 {name: 'cable_name',  mapping: 'cable_name'},
                                             {name: 'project_name',  mapping: 'project_name'},
                                             {name: 'site_a_name',  mapping: 'site_a_name'},
                                             {name: 'site_b_name',  mapping: 'site_b_name'},
                                             {name: 'span_id',  mapping: 'span_id'}
                                            ]
    );

	var pBar = createPBar(store_Cables, 'Cables');

	<%= include_buttons_Cables %>
	var btnsCables = createCablesBtns();
	var cmdBar = createCmdBar(btnsCables);
	var cols =
			[
       		{id: 'link', header: 'Name', dataIndex: 'cable_name', sortable: true, renderer: linkShow, width: 120},
       		{id: 'link', header: 'Project', dataIndex: 'project_name', sortable: true, renderer: linkShow, width: 220},
       		{id: 'link', header: 'Owner', dataIndex: 'company_name', sortable: true, renderer: linkShow, width: 220},
       		{id: 'link', header: 'Site A', dataIndex: 'site_a_name', sortable: true, renderer: linkShow, width: 180},
       		{id: 'link', header: 'Site B', dataIndex: 'site_b_name', sortable: true, renderer: linkShow, width: 180},
			{id: 'add_fiber', dataIndex: 'add_fiber', renderer: btnCableFibers, width: 40},
      		{id: 'edit', dataIndex: 'edit', renderer: btnEdit, width: 40},
      		{id: 'delete', dataIndex: 'delete', renderer: btnDelete, width: 40}
      		];

  	var grid_Cables = createGrid(store_Cables, 'Cables List', cmdBar, pBar, cols);
	store_Cables.load({params: {start:0 , limit:10}});
	grid_Cables.render('Cables_index_grid_content');

</script>

<div id = "Cables_index_grid_content">
  	<!-- AREA TO RENDER GRID  -->
</div>
